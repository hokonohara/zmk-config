// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#define ZMK_POINTING_DEFAULT_MOVE_VAL 600 // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 10 // default: 10
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

// LAYER
#define LYD 0 // DEFAULT
#define LYA 1 // COLEMAKDH
#define LYN 2 // NUM & FUNC
#define LYS 3 // SYMBOL
#define LYM 4 // NAVIGATION
#define LYC 5 // COMBO

// Home row mods macro
//#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
//#define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_copy {
            timeout-ms = <50>;
            layers = <0 1>;
            key-positions = <10 11>;
            bindings = <&kp LC(C)>;
        };
        combo_paste {
            timeout-ms = <50>;
            layers = <0 1>;
            key-positions = <11 12>;
            bindings = <&kp LC(V)>;
        };
        combo_leftbrace {
            timeout-ms = <50>;
            layers = <0 1>;
            key-positions = <20 21>;
            bindings = <&kp LBRC>;
        };
        combo_rightbrace {
            timeout-ms = <50>;
            layers = <0 1>;
            key-positions = <28 29>;
            bindings = <&kp RBRC>;
        };
        combo_leftbracket {
            timeout-ms = <50>;
            layers = <0 1>;
            key-positions = <21 22>;
            bindings = <&kp LBKT>;
        };
        combo_rightbracket {
            timeout-ms = <50>;
            layers = <0 1>;
            key-positions = <27 28>;
            bindings = <&kp RBKT>;
        };
        combo_leftparenthesis {
            timeout-ms = <50>;
            layers = <0 1>;
            key-positions = <22 23>;
            bindings = <&kp LS(N9)>;
        };
        combo_rightparenthesis {
            timeout-ms = <50>;
            layers = <0 1>;
            key-positions = <26 27>;
            bindings = <&kp LS(N0)>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <3 4>;
            then-layer = <5>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // LAYER 0
        default_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  E       │  R       │  T       │   │  Y       │  U       │  I       │  O       │  P       │
            &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │ L2/ ; :  │
        //    HRML(A,        S,         D,         F)     &kp G          &kp H      HRMR(J,        K,         L,        SEMI)
            &kp A      &kp S      &kp D      &kp F      &kp G          &kp H      &kp J      &kp K      &kp L      &lt LYN SEMI
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  V       │  B       │   │  N       │  M       │ , <      │ . >      │ / ?      │
            &kp Z      &kp X      &kp C      &kp V      &kp B          &kp N      &kp M      &kp COMMA  &kp DOT    &kp FSLH
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
        //                                 │  LYM/SPC │ CTL/TAB  │   │ SFT/RET  │ LYS/BSPC  │
                                       &lt LYM SPACE   &mt LCTRL TAB  &mt LSHFT ENTER  &lt LYS BSPC
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        // LAYER 1
        colemakdh_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  F       │  P       │  B       │   │  J       │  L       │  U       │  I       │  ;       │
            &kp Q      &kp W      &kp F      &kp P      &kp B          &kp Y      &kp L      &kp U      &kp I      &kp SEMI
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  R       │  S       │  T       │  G       │   │  M       │  N       │  E       │  I       │  O       │
        //    HRML(A,        R,         S,         T)     &kp G          &kp M      HRMR(N,        E,         I,        O)
            &kp A      &kp R      &kp S      &kp T      &kp G          &kp M      &kp N      &kp E      &kp I      &lt LYN O
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  D       │  V       │   │  K       │  H       │ , <      │ . >      │ / ?      │
            &kp Z      &kp X      &kp C      &kp D      &kp V          &kp K      &kp H      &kp COMMA  &kp DOT    &kp FSLH
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
        //                                 │  LYS/SPC │ CTL/TAB  │   │ SFT/RET  │ LYM/BSPC  │
                                       &lt LYS SPACE   &mt LCTRL TAB  &mt LSHFT ENTER  &lt LYM BSPC
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        // LAYER 2
        num_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│          │  F7      │  F8      │  F9      │  F10     │   │          │  7       │  8       │  9       │          │
            &trans    &kp F7     &kp F8     &kp F9     &kp F10        &trans    &kp N7     &kp N8     &kp N9      &trans   
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │  F4      │  F5      │  F6      │  F11     │   │          │  4       │  5       │  6       │          │
            &trans    &kp F4     &kp F5     &kp F6     &kp F11        &trans    &kp N4     &kp N5     &kp N6      &trans   
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │  F1      │  F2      │  F3      │  F12     │   │          │  1       │  2       │  3       │          │
            &trans    &kp F1     &kp F2     &kp F3     &kp F12        &trans    &kp N1     &kp N2     &kp N3      &trans   
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
        //                                 │          │          │   │          │  0       │
                                             &trans    &trans          &trans    &kp N0    
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        // LAYER 3
        symbol_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ !        │ #        │ *        │ "        │ '        │   │ ~        │ (        │ )        │          │ OSM WIN  │
            &kp EXCL   &kp HASH   &kp ASTRK  &kp SQT    &kp APOS       &kp TILDE  &kp LBRC   &kp RBRC   &trans     &sk LWIN
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ \        │ +        │ =        │ -        │ _        │   │ `        │ [        │ ]        │          │ OSM ALT  │
            &kp BSLH   &kp PLUS   &kp EQUAL  &kp MINUS  &kp UNDER      &kp GRAVE &kp LBKT    &kp RBKT   &trans     &sk LALT
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ |        │ @        │ &        │ $        │ %        │   │ ^        │ {        │ }        │          │ OSM CTL  │
            &kp PIPE   &kp AT     &kp AMPS   &kp DLLR  &kp PRCNT       &kp CARET  &kp LS(N9) &kp LS(N0) &trans     &sk LCTRL
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
        //                                 │          │          │   │          │          │
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
        // LAYER 4
        navigation_layer {
            bindings = <
        //╭──────────┬───────────────┬───────────────┬───────────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│          │               │               │               │          │   │ DELETE   │ HOME     │ UP       │ END      │ ESC      │
            &trans    &trans          &mmv MOVE_UP    &trans          &mkp MB1       &kp DEL    &kp HOME   &kp UP     &kp PG_UP  &kp ESC
        //├──────────┼───────────────┼───────────────┼───────────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │               │               │               │          │   │ INSERT   │ LEFT     │ DOWN     │ RIGHT    │ SHIFTALT │
            &trans    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT &mkp MB2       &kp INS    &kp LEFT   &kp DOWN   &kp RIGHT  &kp LS(LALT)
        //├──────────┼───────────────┼───────────────┼───────────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │               │               │               │          │   │ CAPS     │ PAGE DN  │ LGUITAB  │ PAGE UP  │ CTRLSPC  │
            &trans    &msc SCRL_UP    &trans          &msc SCRL_DOWN  &mkp MB3       &caps_word  &kp PG_DN  &kp LG(TAB) &kp PG_UP  &kp LC(SPACE)
        //╰──────────┴───────────────┴───────────────┼───────────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
        //                                           │               │          │   │          │          │
                                                      &trans          &trans         &trans     &trans
        //                                           ╰───────────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        // LAYER 5
        combo_layer {
            bindings = <
        //╭────────────┬───────────────┬────────────┬──────────────┬─────────────╮   ╭──────────┬────────────────┬────────────────┬──────────────┬──────────╮
        //│ RESET      │ BOOTLOADER    │            │              │             │   │ LAYER0   │ VOL DOWN       │ VOL UP         │ MUTE         │          │
           &sys_reset  &bootloader      &trans       &trans        &kp LS(LG(S))      &to LYD    &kp C_VOL_DN     &kp C_VOL_UP     &kp C_MUTE     &trans
        //├────────────┼───────────────┼────────────┼──────────────┼─────────────┤   ├──────────┼────────────────┼────────────────┼──────────────┼──────────┤
        //│ BT CLEAR   │ BT CLR ALL    │            │              │             │   │ LAYER1   │ PREV           │ PLAY           │ NEXT         │          │
           &bt BT_CLR  &bt BT_CLR_ALL  &bt BT_NXT    &bt BT_PRV    &kp LS(LG(R))      &to LYA    &kp C_PREV       &kp C_PLAY       &kp C_NEXT     &trans
        //├────────────┼───────────────┼────────────┼──────────────┼─────────────┤   ├──────────┼────────────────┼────────────────┼──────────────┼──────────┤
        //│ PROFILE 0  │ PROFILE 1     │ PROFILE 2  │              │             │   │          │ RGB TOG        │ RGB FWD        │ RGB REV      │          │
          &bt BT_SEL 0 &bt BT_SEL 1    &bt BT_SEL 2  &trans        &kp LC(LA(DEL))    &trans    &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR &trans
        //╰────────────┴───────────────┴────────────┼──────────────┼─────────────┤   ├──────────┼────────────────┼────────────────┴──────────────┴──────────╯
        //                                          │              │             │   │          │                │
                                                     &trans         &trans            &trans     &trans
        //                                          ╰──────────────┴─────────────╯   ╰──────────┴────────────────╯
            >;
        };
    };
};
